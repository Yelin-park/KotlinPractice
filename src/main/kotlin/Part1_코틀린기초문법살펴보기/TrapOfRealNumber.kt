package Part1_코틀린기초문법살펴보기

/*
[실수 타입의 함정]
    실수 값은 2진수 유효숫자로 표현되기 때문에 상황에 따라 정확한 값을 가리킬 수 없음
    연산을 거듭할 수록 오차가 누적됨
    실수를 계산할 때는 항상 대략적인 값만 얻을 수 있다.
    실수 값을 꼭 처리해야 하는 것이 아니라면 정수 타입만을 사용하자
 */
fun main(args: Array<String>): Unit
{
    println(0.1f + 0.1f + 0.1f) // 0.3
    // 아래 결과가 1로 나오지 않음 -> 실수 타입의 함정
    println(0.1f + 0.1f + 0.1f + 0.1f + 0.1f + 0.1f + 0.1f + 0.1f + 0.1f + 0.1f) // 1.0000001
    println(0.1f * 10) // 1.0
}